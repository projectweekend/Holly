{"name":"Holly","tagline":"The code for http://holly.projectweekend.net/","body":"You can see Holly in action at: [http://holly.projectweekend.net/](http://holly.projectweekend.net/)\r\n\r\n\r\n## Development Environment\r\n\r\nThe development environment uses [Docker](http://www.docker.com/) and [Fig](http://orchardup.github.io/fig/). This makes it super easy to get up and running with a configuration that would closely mirror production. A [Vagrant](http://www.vagrantup.com/) config file is included for operating systems that cannot yet run Docker natively.\r\n\r\nWith Docker/Fig/Vagrant installed, use the following steps to launch for the first time:\r\n\r\n* `npm install` from within the project root to locally install all of the web app's Node dependencies.\r\n* `fig up` to start the web app. This will download and provision two containers: one running Mongo and one running Holly. This will take a while, but once it completes subsequent launches will be much faster.\r\n* When `fig up` completes, the app should be accessible at [http://127.0.0.1:3000](http://127.0.0.1:3000). (NOTE: if running commands within the Vagrant VM that is provisioned by the `Vagrantfile` included here, the app can be found at: [http://192.168.13.81:3000](http://192.168.13.81:3000))\r\n\r\n\r\n## Configuration\r\n\r\nThere are just a couple of configurations managed as environment variables. In the development environment, these are injected by Fig and managed in the `fig.yml` file.\r\n\r\n* `PORT` - Changes the port number for the web app. The default is 3000.\r\n* `JWT_SECRET` - This is a secret string that you make up. It is used to encrypt and verify the authentication token on routes that require authentication.\r\n\r\n\r\n## API Info\r\n\r\nThis API is currently being redesigned. The previous routes related to charts have been temporarily removed. They will return after some other things are settled.\r\n\r\n\r\n#### Get current reading from sensors\r\n\r\n```\r\nGET: /api/sensor\r\n```\r\n\r\n**Response Body**\r\n```json\r\n{\r\n    \"date\": \"2014-07-06T03:52:23.368Z\",\r\n    \"temp_c\": 22,\r\n    \"temp_f\": 71.6,\r\n    \"humidity\": 34.99,\r\n    \"pressure\":984.61,\r\n    \"luminosity\":61\r\n}\r\n```\r\n\r\n#### Get current reading from Raspberry Pi system\r\n\r\n```\r\nGET: /api/raspberry-pi\r\n```\r\n\r\n**Response Body**\r\n```json\r\n{\r\n    \"date\": \"2014-07-06T03:52:23.368Z\",\r\n    \"cpu_temp_c\": 22,\r\n    \"cpu_temp_f\": 71.6\r\n}\r\n```\r\n\r\n#### Get forecast\r\n\r\n```\r\nGET: /api/weather\r\n```\r\n\r\n**Response Body:**\r\nSee [Forecast.io API documentation](https://developer.forecast.io/docs/v2)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}